{
  "data": [
    {
      "theme": "Python",
      "question": "Как расшифровать LEGB в python ?",
      "explanation": "LEGB - это порядок, в котором Python ищет имена в пространстве имен. ",
      "correct_answer": "Local, Enclosing, Global, Built-in",
      "incorrect_answers": {
        "1": "Local, Encoded, Global, Byte-code",
        "2": "Loose, Elastic, Global, Base"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое *args, **kwargs в python?",
      "explanation": "*args и **kwargs - это специальный синтаксис в Python. *args передает произвольное количество неименованных аргументов в виде кортежа, а **kwargs - в виде словаря.",
      "correct_answer": "Обозначение неопределенного количества аргументов в функции",
      "incorrect_answers": {
        "1": "Специальный синтаксис для определения аргументов функции",
        "2": "Аргументы функции, передаваемые в виде словаря",
        "3": "Аргументы функции, передаваемые в виде списка"
      }
    },
    {
      "theme": "Python Quiz",
      "question": "Выберите неизменяемый тип данных",
      "explanation": "tuple - является неизменяемой структурой данных, элементы в нем нельзя изменить в программе, однако если элементом является изменяемая структура данных, то ее элементы по прежнему могут быть изменены.",
      "correct_answer": "tuple",
      "incorrect_answers": {
        "1": "list",
        "2": "byte arrays",
        "3": "dict"
      }
    },
    {
      "theme": "Python",
      "question": "Что получится в результате выражения f\"{31 / 10:.5f}\" в python?",
      "explanation": "Код f\"{31 / 10:.5f}\" означает форматированную строку, которая выводит результат деления 31 на 10 с точностью до 5 знаков после запятой.",
      "correct_answer": "3.10000",
      "incorrect_answers": {
        "1": "3.1",
        "2": "3.10",
        "3": "Error"
      }
    },
    {
      "theme": "Python",
      "question": "Какой оператор используется для проверки значений в диапазоне в Python?",
      "explanation": "Для проверки значений в диапазоне в Python используется оператор range. Он позволяет создавать последовательности целых чисел в определенном диапазоне.",
      "correct_answer": "range",
      "incorrect_answers": {
        "1": "in",
        "2": "not",
        "3": "size"
      }
    },
    {
      "theme": "Python",
      "question": "С помощью чего можно создать контекстный менеджер в python?",
      "explanation": "С помощью ключевого слова with. Это позволяет создавать контекстный менеджер, который автоматически вызывает методы __enter__ и __exit__ при входе и выходе из блока кода, соответственно.",
      "correct_answer": "С помощью ключевого слова with",
      "incorrect_answers": {
        "1": " Классическим методом def",
        "2": "Через декоратор @contextmanager"
      }
    },
    {
      "theme": "Python",
      "question": "Чему равен результат выполнения:\r\na \u003d [1, 2, 3]\r\nb \u003d [4, 5, 6]\r\n\r\na.append(b)\r\n\r\nprint(a)",
      "explanation": "Метод append() добавляет объект b как один элемент списка a, создавая вложенный список.",
      "correct_answer": "[1, 2, 3, [4, 5, 6]]",
      "incorrect_answers": {
        "1": "[1, 2, 3, 4, 5, 6]",
        "2": "[1, 2, 3, 6, 5, 4]"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое утиная типизация в Python?",
      "explanation": "Утиная типизация означает, что тип объекта не имеет значения, если он поддерживает необходимые методы. \"Если она выглядит как утка, плавает как утка и крякает как утка, то она, вероятно, и есть утка.\"",
      "correct_answer": "Типизация, позволяющая любому объекту иметь любое поведение, если оно поддерживает необходимые метод",
      "incorrect_answers": {
        "1": "Типизация, основанная на жестко заданных типах",
        "2": "Типизация, при которой тип переменной задается автоматически"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое аннотации типов в python?",
      "explanation": "Аннотации типов - это специальный синтаксис для определения типа объекта. Они не требуются для выполнения кода, но могут помочь в его понимании и автоматических проверках типов.",
      "correct_answer": "это специальный синтаксис для определения типа переменной или возвращаемого значения функции",
      "incorrect_answers": {
        "1": "это инструкции языка, которые производят поиск ошибок в коде",
        "2": "это строковые значения, которые назначаются переменной или функции для облегчения чтения кода",
        "3": "это название переменных и функций, которое используется для более понятного кода"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое функция в python ?",
      "explanation": "В Python функция - это именованный блок кода, который можно вызывать из программы. В функции могут быть необязательные аргументы со значениями по умолчанию и именованные аргументы.",
      "correct_answer": "Функция - это именованный блок кода, который можно вызывать из программы.",
      "incorrect_answers": {
        "1": "Функция - это инструкция языка, выполняющая определенную операцию.",
        "2": "Функция - это модуль, который можно импортировать для использования в программе.",
        "3": "Функция - это строка, которая может содержать переменные.\r\n"
      }
    },
    {
      "theme": "Python",
      "question": "Что представляет собой словарь в Python?",
      "explanation": "Словарь в Python – это неупорядоченная коллекция пар ключ-значение. Ключи уникальны, и к ним можно обращаться для получения соответствующих значений",
      "correct_answer": "Коллекцию неупорядоченных пар ключ-значение ",
      "incorrect_answers": {
        "1": "Коллекцию упорядоченных элементов",
        "2": "Матрицу значений"
      }
    },
    {
      "theme": "Python",
      "question": "Сколько пар ключ значение может быть в словаре в python?",
      "explanation": "В Python нет ограничений на количество пар ключ-значение в словаре.\r\nНапример, вы можете добавлять пары ключ-значение до тех пор, пока у вас есть достаточно памяти на хранение словаря.",
      "correct_answer": "Неограниченное количество",
      "incorrect_answers": {
        "1": "Максимальное количество зависит от версии Python",
        "2": "До 2**31-1 пары ключ-значение"
      }
    },
    {
      "theme": "Python",
      "question": "Для чего нужен метод swapcase в python?",
      "explanation": "Метод swapcase меняет регистр символов в строке на противоположный. Например, \"Hello, World!\" станет \"hELLO, wORLD!\".",
      "correct_answer": "Для меняет регистр символов в строке на противоположный.",
      "incorrect_answers": {
        "1": " Для перевода строки в верхний регистр.",
        "2": "Для удаления пробелов в начале и конце строки.",
        "3": "Для замены одной подстроки на другую в строке."
      }
    },
    {
      "theme": "Python",
      "question": "Чему равен результат выполнения:\r\na \u003d [1, 2, 3]\r\nb \u003d [4, 5, 6]\r\n\r\na.extend(b)\r\n\r\nprint(a)",
      "explanation": "Метод extend() добавляет элементы списка b к списку a без создания нового списка.",
      "correct_answer": "[1, 2, 3, 4, 5, 6]",
      "incorrect_answers": {
        "1": "[1, 2, 3, [4, 5, 6]]",
        "2": "[1, 2, 3, 6, 5, 4]"
      }
    },
    {
      "theme": "Python",
      "question": "Что произойдет при выполнении следующего кода?\r\na \u003d [1, 2, 3]\r\nb \u003d [4, 5, 6]\r\n\r\na.extend(b)\r\n\r\nb.append(7)\r\n\r\nprint(a)",
      "explanation": "Метод extend() добавит элементы из списка b в конец списка a до изменения списка b.",
      "correct_answer": "[1, 2, 3, 4, 5, 6]",
      "incorrect_answers": {
        "1": "[1, 2, 3, 4, 5, 6, 7]",
        "2": "[1, 2, 3, [4, 5, 6]]"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое контекстный менеджер в Python?",
      "explanation": "Контекстный менеджер в Python используется для управления контекстом выполнения кода. Он определяет блок кода, который должен быть выполнен при входе в контекст, и блок кода, выполняемый при выходе.",
      "correct_answer": " Это инструмент для управления контекстом выполнения кода в Python",
      "incorrect_answers": {
        "1": "Это менеджер окон в графическом интерфейсе Python",
        "2": "Это менеджер памяти в Python"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое копирование в Python?",
      "explanation": "Копирование в Python создает ссылку на объект, что означает, что при изменении объекта, изменится и его копия. Глубокое копирование создает полную копию объекта, включая все вложенные объекты.",
      "correct_answer": "Это создание ссылки на объект",
      "incorrect_answers": {
        "1": "Это создание полной копии объекта"
      }
    },
    {
      "theme": "Python",
      "question": "Можно ли создать словарь с упорядоченным набором ключей в Python?",
      "explanation": "Начиная с версии Python 3.7, словари в Python могут иметь упорядоченный набор ключей благодаря изменению реализации структуры данных словаря.",
      "correct_answer": "Да, с версии Python 3.7 словарь может иметь упорядоченный набор ключей.",
      "incorrect_answers": {
        "1": "Нет, словарь в Python не может иметь упорядоченный набор ключей.",
        "2": "Да, но только при условии использования метода sort() для упорядочивания ключей словаря.",
        "3": "Да, но только при условии использования метода order() для создания словаря с упорядоченными ключами"
      }
    },
    {
      "theme": "Python",
      "question": "Что означает \"is\" в Python?",
      "explanation": "Оператор \"is\" сравнивает идентичность объектов, т.е. проверяет, указывают ли две переменные на один и тот же объект в памяти. ",
      "correct_answer": "оператор сравнения идентичности объектов",
      "incorrect_answers": {
        "1": "оператор сравнения значений",
        "2": "оператор присваивания"
      }
    },
    {
      "theme": "Python",
      "question": "Что произойдет при выполнении следующего кода?\r\na \u003d [1, 2, 3]\r\nb \u003d [4, 5, 6]\r\na.append(b)\r\n\r\nprint(len(a))\r\n",
      "explanation": "Список a будет иметь 4 элемента: [1, 2, 3, [4, 5, 6]].",
      "correct_answer": "4",
      "incorrect_answers": {
        "1": "3",
        "2": "6"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое переменная в Python?",
      "explanation": "Переменная в Python - это имя, которое ссылается на объект, который может быть числом, строкой, списком, функцией и т.д. Она используется для хранения данных и обращения к ним в коде.",
      "correct_answer": "Это имя, которое ссылается на объект в Python",
      "incorrect_answers": {
        "1": "Это структура данных в Python",
        "2": "Это функция в Python"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое область видимости в python?",
      "explanation": "Область видимости в Python — это области имен в модуле или функции, где определенная переменная или функция может быть использована. Области бывают глобальными, локальными и нелокальными.",
      "correct_answer": "Это области имен в модуле или функции",
      "incorrect_answers": {
        "1": "Часть кода программы, где доступны переменные и функции",
        "2": "Это параметры функции",
        "3": "Это условия в циклах и блоках условного оператора"
      }
    },
    {
      "theme": "Python",
      "question": "Какой оператор используется для сравнения значений объектов в Python?",
      "explanation": "Оператор \"\u003d\u003d\" используется для сравнения значений объектов, т.е. проверяет, равны ли значения двух объектов.",
      "correct_answer": "\"\u003d\u003d\"",
      "incorrect_answers": {
        "1": "\"\u003d\"",
        "2": "\"is\""
      }
    },
    {
      "theme": "Python",
      "question": "Что делает функция isalnum ?",
      "explanation": "Эта функция возвращает истину, если все символы в строке являются алфавитно-цифровые и есть по крайней мере один символ, иначе ложь.",
      "correct_answer": "Вернет True, если в строке есть хотя бы один символ и все символы строки это цифры или буквы",
      "incorrect_answers": {
        "1": "Вернёт True , если в строке хотя бы одно число",
        "2": "Вернёт True , если в строке хотя бы одна буква"
      }
    },
    {
      "theme": "Python",
      "question": "Что произойдет при выполнении следующего кода?\r\na \u003d [1, 2, 3]\r\nb \u003d [4, 5, 6]\r\n\r\na.append(b)\r\n\r\nb.append(7)\r\n\r\nprint(a)",
      "explanation": "Метод append() добавит объект b в конец списка a как один элемент. Если список b изменится, изменится и элемент списка a, содержащий b.",
      "correct_answer": "[1, 2, 3, 4, 5, 6, [7]]",
      "incorrect_answers": {
        "1": "[1, 2, 3, 4, 5, 6, 7]",
        "2": "[1, 2, 3, [4, 5, 6]]"
      }
    },
    {
      "theme": "Python",
      "question": "Какой символ используется для задания условного оператора if в Python? ",
      "explanation": "Для задания условного оператора if в Python используется символ \"\u003d\u003d\". Он проверяет, являются ли два значения равными. Если это так, то выполняется определенное действие. ",
      "correct_answer": "\u003d\u003d",
      "incorrect_answers": {
        "1": "++",
        "2": "--",
        "3": "\u003d"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое анонимная функция в python?",
      "explanation": "Анонимная функция - это функция, объявленная без имени с помощью lambda. Она может принимать любое количество аргументов и возвращает результат выражения, составленного после «:».",
      "correct_answer": "Функция, объявленная без имени",
      "incorrect_answers": {
        "1": "Функция для работы с файлами и директориями",
        "2": "Разновидность декораторов в Python",
        "3": "Функция для копирования файлов"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое условные операторы?",
      "explanation": "Условные операторы позволяют задать условие, при котором определенные действия будут выполнены. В Python наиболее распространенные условные операторы это if, elif и else. ",
      "correct_answer": "Операторы, которые выполняют какие-то действия по условию",
      "incorrect_answers": {
        "1": "Операторы, которые выполняют только одно действие",
        "2": "Операторы, которые не могут работать с условиями"
      }
    },
    {
      "theme": "Python",
      "question": "Какой вид форматирования называется классическим ?",
      "explanation": "Классическим форматированием в python называют форматирование через знак (%)",
      "correct_answer": "%",
      "incorrect_answers": {
        "1": ".format()",
        "2": "f-форматирвоание",
        "3": "format()",
        "4": "from string import Template"
      }
    },
    {
      "theme": "Python Quiz",
      "question": "Выберите изменяемый тип данных",
      "explanation": "dict - является изменяемым типом данных, его данные можно изменять по ходу действия программы",
      "correct_answer": "dict",
      "incorrect_answers": {
        "1": "float",
        "2": "tuple",
        "3": "frozenset",
        "4": "str"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое рекурсия в python?",
      "explanation": "Рекурсия в Python является способом перехода от одного состояния задачи к другому, разбивая её на меньшие подзадачи. Это достигается за счет вызова функцией самой себя.",
      "correct_answer": "Способ перехода от одного состояния задачи к другому, разбивая её на меньшие подзадачи.",
      "incorrect_answers": {
        "1": "Устройство хранения структурированных данных.",
        "2": "Совокупность инструкций, выполняющих определённую операцию.",
        "3": "Функция, которая возвращает своё же значение."
      }
    },
    {
      "theme": "Python",
      "question": "Чем файл .pyc отличается от .py ?",
      "explanation": "Файлы .pyc являются скомпилированными версиями .py файлов, созданными интерпретатором Python. Они содержат байт-код, который может быть выполняемым на любой платформе, где установлен Python.",
      "correct_answer": "Файлы .pyc являются скомпилированными версиями .py файлов.",
      "incorrect_answers": {
        "1": "Файлы .py не нуждаются в компиляции, в отличие от файлов .pyc.",
        "2": "Файлы .pyc содержат исходный код программы.",
        "3": "Файлы .pyc используются только для хранения тестовых данных."
      }
    },
    {
      "theme": "Python",
      "question": "Что такое тернарный оператор в Python?",
      "explanation": "Тернарный оператор в Python - это синтаксический сахар, он позволяет записать условное выражение в более компактной форме. Он имеет следующую структуру: \"условие1 if условие else условие\"",
      "correct_answer": "Оператор, который позволяет сократить запись условного выражения",
      "incorrect_answers": {
        "1": "Оператор, который работает только с целыми числами",
        "2": "Оператор, который работает только с булевыми значениями"
      }
    },
    {
      "theme": "Python",
      "question": "Что такое декоратор в python?",
      "explanation": "Декоратор - это функция, которая создает другую функцию и позволяет расширить ее поведение без изменения самой функции. ",
      "correct_answer": "Функция, которая создает другую функцию с новым поведением",
      "incorrect_answers": {
        "1": "Функция, которая используется для выполнения действия перед выполнением другой функции",
        "2": "Конструкция, используемая для создания классов со специальным поведением"
      }
    },
    {
      "theme": "Python",
      "question": "Какой оператор используется для присваивания значения переменной в Python?",
      "explanation": "Оператор \"\u003d\" используется для присваивания значения переменной.",
      "correct_answer": "\"\u003d\"",
      "incorrect_answers": {
        "1": "\"\u003d\u003d\"",
        "2": "\"is\""
      }
    },
    {
      "theme": "Python",
      "question": "Какие значения могут принимать условия в условных операторах Python?",
      "explanation": "Условия в условных операторах Python могут принимать любые значения, включая числа, строки, логические значения (True или False), переменные и т.д. ",
      "correct_answer": "Любые значения",
      "incorrect_answers": {
        "1": "Только числа ",
        "2": "Только строки "
      }
    },
    {
      "theme": "Python",
      "question": "Что произойдет при импортировании модуля если в пространстве имен уже существует имя импортированного модуля?",
      "explanation": "Модуль импортируется только в том случае, если определенное имя не является именем модуля.",
      "correct_answer": "Модуль импортируется только в том случае, если определенное имя не является именем модуля.",
      "incorrect_answers": {
        "1": "Имя импортированного модуля заменит существующее имя в пространстве имен",
        "2": "Будет возбуждено исключение ImportError"
      }
    },
    {
      "theme": "Python",
      "question": "В чем различие между изменяемыми и неизменяемыми типами данных?",
      "explanation": "Изменяемые типы данных, такие как list или dict, могут быть изменены по ссылке, то есть изменения объекта влекут изменения во всех его ссылках. В то время как неизменяемые типы данных, такие как str и",
      "correct_answer": "Изменяемые типы данных могут изменяться по ссылке, а неизменяемые создают новый объект при изменении",
      "incorrect_answers": {
        "1": "Изменяемые типы данных не могут быть изменены после создания, а неизменяемые могут.",
        "2": "Изменяемые типы данных не могут быть скопированы, а неизменяемые могут."
      }
    },
    {
      "theme": "Python",
      "question": "Какие условные операторы знаете в Python?",
      "explanation": "В Python наиболее распространенные условные операторы это if, else и elif. Оператор if - для проверки одного условия, оператор elif - для проверки нескольких вариантов условий, а else - для остальных.",
      "correct_answer": "if, else, elif",
      "incorrect_answers": {
        "1": "else, for",
        "2": "if, else"
      }
    },
    {
      "theme": "Python",
      "question": "Какой функционал даёт метод partition в Python?",
      "explanation": "Метод partition в Python разбивает строку на три подстроки, используя заданный разделитель. Возвращает кортеж из трёх элементов: строка до разделителя, разделитель и строка после разделителя.",
      "correct_answer": "Разделяет строку на подстроки по заданному разделителю.",
      "incorrect_answers": {
        "1": "Разбивает список на два по заданному условию.",
        "2": "Сортирует список по заданной функции.",
        "3": "Возвращает длину строки."
      }
    }
  ]
}